<Window x:Class="tic_tac_toe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:tic_tac_toe"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStyle="None" MouseDown="Window_MouseDown" AllowsTransparency="True">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Image  x:Name="backg" gif:AnimationBehavior.SourceUri="../Pictures/synthwaveback.gif" Stretch="UniformToFill"/>
        <S x:Name="Button_Start" FontFamily="Outrun future" Content="Start" Width="500" Height="70" Margin="150,282,150,0" VerticalAlignment="Top" Click="Button_Click" FontSize="24">
            <Button.Background>
                <ImageBrush ImageSource="C:\Users\Roman\source\repos\mini-gamesggs\tic_tac_toe\Pictures\synthbutt.jpeg" Stretch="Fill" />
            </Button.Background>
        </S>
        <Button x:Name="Button_exit" Content="Exit" HorizontalAlignment="Center" Height="70" Margin="0,377,0,0" VerticalAlignment="Top"  Width="500" Click="Button_exit_Click" BorderBrush="#00000000" FontFamily="Outrun future" FontSize="24">
            <Button.Background>
                <ImageBrush ImageSource="C:\Users\Roman\source\repos\mini-gamesggs\tic_tac_toe\Pictures\synthbutt.jpeg" Stretch="Fill" />
            </Button.Background>
        </Button>
        <Button x:Name="Button_Maximize" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Right" Height="30" Margin="690,5,55,0" VerticalAlignment="Top" Width="30" Click="Button_Maximize_Click">
            <StackPanel>
                <Image Source="Pictures/maximizeicon.png"/>
            </StackPanel>
        </Button>

        <Button x:Name="Button_Minimize" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Right" Height="30" Margin="595,5,85,0" VerticalAlignment="Top" Width="30" Click="Button_Minimize_Click">
            <StackPanel>
                <Image Source="Pictures/Minimizeicon.png"/>
            </StackPanel>
        </Button>

        <Button x:Name="Button_Close" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Right" Height="30" Margin="700,5,5,0" VerticalAlignment="Top" Width="50" Click="Button_Close_Click">
            <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Height="30" Width="50">
                <StackPanel Orientation="Horizontal" >
                    <Image Source="Pictures/Closeicon.png"/>
                </StackPanel>
                <Label.Style>
                    <Style TargetType="Label">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
        </Button>

    </Grid>



</Window>

